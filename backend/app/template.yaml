AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  app

  Sample SAM Template for app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev

Mappings:
  EnvironmentMap:
    dev:
      LineChannelId: LineChannelId
      LIFFChannelId: LIFFChannelId
      LiffUrl: https://liff.line.me/LIFF-ID
      LinePayChannelId: LinePayChannelId
      LinePayChannelSecret: LinePayChannelSecret
      LinePayIsSandbox: True
      User: user
      Picture: picture
      PaymentInfoDBName: PaymentInfoDBName
      LINEChannelAccessTokenDBName: LINEChannelAccessTokenDBTableOrderDev
      FrontS3BucketName: S3 Name for FrontEnd
      LayerVersion: 2
      LoggerLevel: INFO
      LambdaMemorySize: 128 to 3008
      # TTL is True:Reservation Data will be deleted at the specified date, False:Data will not be deleted
      TTL: False
      # Set day to delete data
      # If you set TTL: True, data will be deleted in the period specified below.
      TTLDay: 10
      # ### ACCESS LOG SETTING ###
      # LogS3Bucket: S3BucketName for AccessLog
      # LogFilePrefix: tableorder-sample/
      # ### ACCESS LOG SETTING ###
    prod:
      LineChannelId: LineChannelId
      LIFFChannelId: LIFFChannelId

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:GetItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !GetAtt TableOrderItemList.Arn
      RoleName: !Sub "${AWS::StackName}-LambdaRole"

  PostPictureFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: post_picture/
      Handler: post_picture.lambda_handler
      Runtime: python3.8
      Layers:
        - !Join
          - ":"
          - - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer"
            - !ImportValue StrageLayerDev
            - !FindInMap [EnvironmentMap, !Ref Environment, LayerVersion]
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          PICTURE_DB: !Ref Picture
      Events:
        PostPicture:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /post_picture
            Method: post
           
  User:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: lineId
          AttributeType: N
      KeySchema:
        - AttributeName: lineId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName: !FindInMap [EnvironmentMap, !Ref Environment, User]
      Tags:
        - Key: "Name"
          Value: "LINE"
        - Key: "App"
          Value: "TableOrder"
  Picture:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: lineId
          AttributeType: N
        - AttributeName: createDateTime
          AttributeType: S
      KeySchema:
        - AttributeName: lineId
          KeyType: HASH
        - AttributeName: createDateTime
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      TableName: !FindInMap [EnvironmentMap, !Ref Environment, Picture]
      Tags:
        - Key: "Name"
          Value: "LINE"
        - Key: "App"
          Value: "TableOrder"
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  PostPictureApi:
    Description: "API Gateway endpoint URL for Prod stage for Post Picture function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/post_picrure/"